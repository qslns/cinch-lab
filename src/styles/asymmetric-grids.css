/* ==========================================================================
   CINCH LAB - Asymmetric Grid Systems
   Phase 1.2: Broken Grids, Rotations, Overlaps
   Inspired by Margiela Deconstruction & Sacai Layering
   ========================================================================== */

/* ------------------------------------------------------------------
   BASE ASYMMETRIC GRID CONTAINER
   ------------------------------------------------------------------ */

.asymmetric-container {
  display: grid;
  grid-template-columns: var(--grid-columns-asymmetric);
  gap: var(--grid-gap-irregular);
  position: relative;
  width: 100%;
}

/* ------------------------------------------------------------------
   MARGIELA DECONSTRUCTED GRID
   Intentionally broken, offset, rotated
   ------------------------------------------------------------------ */

.margiela-grid {
  display: grid;
  grid-template-columns:
    minmax(1rem, 0.618fr)
    minmax(200px, 1fr)
    minmax(150px, 1.618fr)
    minmax(100px, 1fr)
    minmax(250px, 2fr)
    minmax(1rem, 0.5fr);
  grid-template-rows: auto;
  gap: 0;
  position: relative;
}

.margiela-grid > * {
  position: relative;
}

/* Irregular Item Positioning */
.margiela-grid > *:nth-child(1) {
  grid-column: 2 / 4;
  transform: rotate(var(--rotate-subtle-left));
  margin-top: var(--space-8);
}

.margiela-grid > *:nth-child(2) {
  grid-column: 3 / 6;
  transform: rotate(var(--rotate-subtle-right));
  margin-left: var(--overlap-moderate);
  z-index: var(--z-2);
}

.margiela-grid > *:nth-child(3) {
  grid-column: 1 / 3;
  transform: rotate(var(--rotate-moderate-left));
  margin-top: var(--overlap-tight);
}

.margiela-grid > *:nth-child(4) {
  grid-column: 4 / 7;
  transform: rotate(var(--rotate-subtle-right));
  z-index: var(--z-3);
}

.margiela-grid > *:nth-child(5) {
  grid-column: 2 / 5;
  margin-top: var(--overlap-dramatic);
  z-index: var(--z-4);
}

/* ------------------------------------------------------------------
   SACAI LAYERED GRID
   Overlapping sections with contrasting materials
   ------------------------------------------------------------------ */

.sacai-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, auto);
  gap: 0;
  position: relative;
  isolation: isolate;
}

/* Layer 1: Base Foundation */
.sacai-grid-layer-1 {
  grid-column: 1 / 3;
  grid-row: 1 / 3;
  background: var(--zone-home-surface);
  z-index: var(--z-1);
  padding: var(--space-21);
}

/* Layer 2: Contrasting Splice */
.sacai-grid-layer-2 {
  grid-column: 2 / 4;
  grid-row: 2 / 4;
  background: var(--sacai-layer-navy);
  color: var(--margiela-paper);
  z-index: var(--z-2);
  padding: var(--space-21);
  margin-left: var(--overlap-moderate);
  margin-top: var(--overlap-moderate);
}

/* Layer 3: Accent Overlap */
.sacai-grid-layer-3 {
  grid-column: 3 / 5;
  grid-row: 1 / 2;
  background: var(--sacai-burnt-orange);
  color: var(--margiela-snow);
  z-index: var(--z-3);
  padding: var(--space-13);
  margin-left: var(--overlap-dramatic);
  transform: rotate(var(--rotate-subtle-right));
}

/* ------------------------------------------------------------------
   CDG RADICAL MINIMAL GRID
   Extreme asymmetry, bold negative space
   ------------------------------------------------------------------ */

.cdg-grid {
  display: grid;
  grid-template-columns: 1fr 3fr 0.5fr 2fr 1.5fr;
  grid-template-rows: auto 2fr auto 1fr auto;
  gap: var(--space-55);
  position: relative;
  min-height: 100vh;
}

.cdg-grid-item {
  position: relative;
}

/* Radical positioning */
.cdg-grid-item-1 {
  grid-column: 2 / 3;
  grid-row: 1 / 3;
  align-self: end;
}

.cdg-grid-item-2 {
  grid-column: 4 / 6;
  grid-row: 2 / 4;
  align-self: start;
}

.cdg-grid-item-3 {
  grid-column: 1 / 2;
  grid-row: 3 / 5;
}

.cdg-grid-item-4 {
  grid-column: 3 / 5;
  grid-row: 4 / 6;
  justify-self: end;
}

/* ------------------------------------------------------------------
   HYBRID IRREGULAR GRID
   Combines all three approaches
   ------------------------------------------------------------------ */

.hybrid-grid {
  display: grid;
  grid-template-columns:
    minmax(0, 0.5fr)
    minmax(150px, 1fr)
    minmax(200px, 1.618fr)
    minmax(100px, 0.8fr)
    minmax(250px, 2fr)
    minmax(0, 1fr);
  grid-template-rows: auto minmax(200px, 1fr) auto minmax(150px, 0.8fr) auto;
  gap: var(--grid-gap-irregular);
  position: relative;
  min-height: 100vh;
}

/* Dynamic rotation classes */
.rotate-left-1 { transform: rotate(var(--rotate-subtle-left)); }
.rotate-right-1 { transform: rotate(var(--rotate-subtle-right)); }
.rotate-left-2 { transform: rotate(var(--rotate-moderate-left)); }
.rotate-right-2 { transform: rotate(var(--rotate-moderate-right)); }
.rotate-left-3 { transform: rotate(var(--rotate-dramatic-left)); }
.rotate-right-3 { transform: rotate(var(--rotate-dramatic-right)); }

/* Dynamic overlap classes */
.overlap-tight { margin-left: var(--overlap-tight); }
.overlap-moderate { margin-left: var(--overlap-moderate); }
.overlap-dramatic { margin-left: var(--overlap-dramatic); }

/* ------------------------------------------------------------------
   EXPOSED STRUCTURE GRID
   Visual grid lines showing construction
   ------------------------------------------------------------------ */

.exposed-grid {
  position: relative;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: var(--space-8);
}

.exposed-grid::before {
  content: '';
  position: absolute;
  inset: 0;
  background-image:
    repeating-linear-gradient(
      90deg,
      var(--margiela-exposed-seam) 0,
      var(--margiela-exposed-seam) 1px,
      transparent 1px,
      transparent calc(100% / 12)
    ),
    repeating-linear-gradient(
      0deg,
      var(--margiela-exposed-seam) 0,
      var(--margiela-exposed-seam) 1px,
      transparent 1px,
      transparent 2rem
    );
  opacity: 0.1;
  pointer-events: none;
  z-index: var(--z-overlay);
}

/* Show grid on hover */
.exposed-grid:hover::before {
  opacity: 0.3;
  transition: opacity var(--duration-normal) var(--ease-smooth);
}

/* ------------------------------------------------------------------
   FLOATING ELEMENT SYSTEM
   Elements that break grid constraints
   ------------------------------------------------------------------ */

.floating-element {
  position: absolute;
  z-index: var(--z-5);
  pointer-events: auto;
}

.floating-element-1 {
  top: 10%;
  right: 15%;
  transform: rotate(var(--rotate-moderate-right));
}

.floating-element-2 {
  bottom: 20%;
  left: 10%;
  transform: rotate(var(--rotate-moderate-left));
}

.floating-element-3 {
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(var(--rotate-subtle-right));
}

/* ------------------------------------------------------------------
   MASONRY LAYOUT - PINTEREST STYLE
   Irregular heights, organic flow
   ------------------------------------------------------------------ */

.masonry-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  grid-auto-rows: 20px;
  gap: var(--space-8);
}

.masonry-item {
  grid-row: span var(--span, 10);
  position: relative;
}

/* Dynamic span based on content */
.masonry-item-small { --span: 8; }
.masonry-item-medium { --span: 12; }
.masonry-item-large { --span: 18; }
.masonry-item-xlarge { --span: 25; }

/* ------------------------------------------------------------------
   BROKEN SYMMETRY CONTAINERS
   Intentionally unbalanced layouts
   ------------------------------------------------------------------ */

.broken-symmetry-left {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: var(--space-21);
}

.broken-symmetry-left > *:first-child {
  transform: translateX(var(--space-8)) rotate(var(--rotate-subtle-left));
}

.broken-symmetry-right {
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: var(--space-21);
}

.broken-symmetry-right > *:last-child {
  transform: translateX(calc(var(--space-8) * -1)) rotate(var(--rotate-subtle-right));
}

/* ------------------------------------------------------------------
   DIAGONAL FLOW GRID
   Elements flow diagonally across page
   ------------------------------------------------------------------ */

.diagonal-flow {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(6, 1fr);
  gap: 0;
  position: relative;
  min-height: 100vh;
}

.diagonal-flow > *:nth-child(1) {
  grid-column: 1 / 3;
  grid-row: 1 / 2;
  align-self: start;
  justify-self: start;
}

.diagonal-flow > *:nth-child(2) {
  grid-column: 2 / 4;
  grid-row: 2 / 3;
  align-self: center;
  justify-self: center;
  z-index: var(--z-2);
}

.diagonal-flow > *:nth-child(3) {
  grid-column: 3 / 5;
  grid-row: 3 / 4;
  z-index: var(--z-3);
}

.diagonal-flow > *:nth-child(4) {
  grid-column: 4 / 6;
  grid-row: 4 / 5;
  align-self: end;
  z-index: var(--z-4);
}

.diagonal-flow > *:nth-child(5) {
  grid-column: 5 / 7;
  grid-row: 5 / 6;
  align-self: end;
  justify-self: end;
  z-index: var(--z-5);
}

/* ------------------------------------------------------------------
   RESPONSIVE BEHAVIOR
   Grids adapt but maintain asymmetry
   ------------------------------------------------------------------ */

/* Tablet */
@media (max-width: 1024px) {
  .margiela-grid {
    grid-template-columns: repeat(3, 1fr);
  }

  .sacai-grid {
    grid-template-columns: repeat(2, 1fr);
  }

  .cdg-grid {
    grid-template-columns: 1fr 2fr 1fr;
    gap: var(--space-34);
  }

  .hybrid-grid {
    grid-template-columns: repeat(3, 1fr);
    gap: var(--space-13);
  }
}

/* Mobile */
@media (max-width: 640px) {
  .margiela-grid,
  .sacai-grid,
  .cdg-grid,
  .hybrid-grid {
    grid-template-columns: 1fr;
    gap: var(--space-13);
  }

  /* Reduce rotations on mobile */
  .margiela-grid > *:nth-child(odd) {
    transform: rotate(var(--rotate-subtle-left));
  }

  .margiela-grid > *:nth-child(even) {
    transform: rotate(var(--rotate-subtle-right));
  }

  /* Reduce overlaps on mobile */
  .sacai-grid-layer-2,
  .sacai-grid-layer-3 {
    margin-left: var(--overlap-tight);
    margin-top: var(--overlap-tight);
  }

  /* Simplify diagonal flow */
  .diagonal-flow {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }

  .diagonal-flow > * {
    grid-column: 1 / 2;
    grid-row: auto;
  }
}

/* Large Desktop - Enhance asymmetry */
@media (min-width: 1920px) {
  .margiela-grid {
    grid-template-columns:
      minmax(2rem, 1fr)
      minmax(300px, 1fr)
      minmax(250px, 1.618fr)
      minmax(200px, 1fr)
      minmax(400px, 2fr)
      minmax(2rem, 1fr);
  }

  .hybrid-grid {
    gap: var(--space-21);
  }

  .cdg-grid {
    gap: var(--space-89);
  }
}

/* ------------------------------------------------------------------
   PRINT BEHAVIOR
   Simplify for print media
   ------------------------------------------------------------------ */

@media print {
  .margiela-grid,
  .sacai-grid,
  .cdg-grid,
  .hybrid-grid,
  .diagonal-flow {
    display: block;
  }

  .margiela-grid > *,
  .floating-element,
  .rotate-left-1,
  .rotate-left-2,
  .rotate-left-3,
  .rotate-right-1,
  .rotate-right-2,
  .rotate-right-3 {
    transform: none !important;
    margin: 0 !important;
    page-break-inside: avoid;
  }

  .exposed-grid::before {
    display: none;
  }
}

/* ------------------------------------------------------------------
   ACCESSIBILITY
   ------------------------------------------------------------------ */

/* Reduce motion */
@media (prefers-reduced-motion: reduce) {
  .margiela-grid > *,
  .sacai-grid > *,
  .floating-element,
  [class*="rotate-"] {
    transform: none !important;
    transition: none !important;
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .exposed-grid::before {
    opacity: 0.5;
  }
}